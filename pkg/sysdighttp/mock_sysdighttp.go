// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/sysdighttp/sysdighttp.go

// Package sysdighttp is a generated GoMock package.
package sysdighttp

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	logrus "github.com/sirupsen/logrus"
)

// MockSysdigClient is a mock of SysdigClient interface.
type MockSysdigClient struct {
	ctrl     *gomock.Controller
	recorder *MockSysdigClientMockRecorder
}

// MockSysdigClientMockRecorder is the mock recorder for MockSysdigClient.
type MockSysdigClientMockRecorder struct {
	mock *MockSysdigClient
}

// NewMockSysdigClient creates a new mock instance.
func NewMockSysdigClient(ctrl *gomock.Controller) *MockSysdigClient {
	mock := &MockSysdigClient{ctrl: ctrl}
	mock.recorder = &MockSysdigClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSysdigClient) EXPECT() *MockSysdigClientMockRecorder {
	return m.recorder
}

// ResponseBodyToJson mocks base method.
func (m *MockSysdigClient) ResponseBodyToJson(resp *http.Response, target interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResponseBodyToJson", resp, target)
	ret0, _ := ret[0].(error)
	return ret0
}

// ResponseBodyToJson indicates an expected call of ResponseBodyToJson.
func (mr *MockSysdigClientMockRecorder) ResponseBodyToJson(resp, target interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResponseBodyToJson", reflect.TypeOf((*MockSysdigClient)(nil).ResponseBodyToJson), resp, target)
}

// SysdigRequest mocks base method.
func (m *MockSysdigClient) SysdigRequest(logger *logrus.Logger, config SysdigRequestConfig) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SysdigRequest", logger, config)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SysdigRequest indicates an expected call of SysdigRequest.
func (mr *MockSysdigClientMockRecorder) SysdigRequest(logger, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SysdigRequest", reflect.TypeOf((*MockSysdigClient)(nil).SysdigRequest), logger, config)
}
